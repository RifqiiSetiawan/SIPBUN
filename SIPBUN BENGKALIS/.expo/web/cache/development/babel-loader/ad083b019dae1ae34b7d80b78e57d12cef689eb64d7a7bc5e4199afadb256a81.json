{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { LineChart } from 'react-native-chart-kit';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Chartkelapa = function Chartkelapa() {\n  var data = {\n    labels: ['9/1', '10/01', '11/01', '12/01', '13/01', '14/01', '15/01'],\n    datasets: [{\n      data: [2810, 2900, 2930, 2800, 3000, 3100, 3150],\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return `rgba(219, 204, 149, ${opacity})`;\n      },\n      strokeWidth: 2\n    }, {\n      data: [2700, 2600, 2900, 2750, 2990, 3000, 3010],\n      color: function color() {\n        var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n        return `rgba(218, 255, 71, ${opacity})`;\n      },\n      strokeWidth: 2\n    }]\n  };\n  var chartConfig = {\n    backgroundGradientFrom: '#1E2923',\n    backgroundGradientFromOpacity: 0,\n    backgroundGradientTo: '#1E2923',\n    backgroundGradientToOpacity: 0.5,\n    decimalPlaces: 0,\n    color: function color() {\n      var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n      return `rgba(26, 255, 146, ${opacity})`;\n    },\n    strokeWidth: 2,\n    barPercentage: 0.5\n  };\n  var screenWidth = Dimensions.get('window').width;\n  return _jsxs(View, {\n    style: {\n      backgroundColor: '#221F3A',\n      marginTop: 20,\n      borderRadius: 10\n    },\n    children: [_jsxs(View, {\n      style: styles.container,\n      children: [_jsx(Text, {\n        style: styles.box1,\n        children: \"Kelapa Bulat\"\n      }), _jsxs(Text, {\n        style: styles.box2,\n        children: [\"3,150 \", _jsx(Text, {\n          style: {\n            fontSize: 16\n          },\n          children: \"Rp/Kg\"\n        })]\n      })]\n    }), _jsx(LineChart, {\n      data: data,\n      width: screenWidth,\n      height: 220,\n      chartConfig: chartConfig,\n      bezier: true\n    })]\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  box1: {\n    padding: 10,\n    color: 'white',\n    fontSize: 20\n  },\n  box2: {\n    padding: 10,\n    color: 'white',\n    fontSize: 20\n  }\n});\nexport default Chartkelapa;","map":{"version":3,"names":["React","StyleSheet","View","Text","Dimensions","LineChart","jsx","_jsx","jsxs","_jsxs","Chartkelapa","data","labels","datasets","color","opacity","arguments","length","undefined","strokeWidth","chartConfig","backgroundGradientFrom","backgroundGradientFromOpacity","backgroundGradientTo","backgroundGradientToOpacity","decimalPlaces","barPercentage","screenWidth","get","width","style","backgroundColor","marginTop","borderRadius","children","styles","container","box1","box2","fontSize","height","bezier","create","flexDirection","justifyContent","padding"],"sources":["D:/try/BottomTabDrawer/components/Datachart/chart Kelapa.js"],"sourcesContent":["import React from 'react';\r\nimport { StyleSheet,View, Text, Dimensions } from 'react-native';\r\nimport { LineChart } from 'react-native-chart-kit';\r\n\r\nconst Chartkelapa = () => {\r\n  const data = {\r\n    labels: ['9/1', '10/01', '11/01', '12/01', '13/01',  '14/01', '15/01'],\r\n    datasets: [\r\n        {\r\n            data: [2810, 2900, 2930, 2800, 3000, 3100, 3150],\r\n            color: (opacity = 1) => `rgba(219, 204, 149, ${opacity})`,\r\n            strokeWidth: 2, \r\n        },\r\n        {\r\n        data: [2700, 2600, 2900, 2750, 2990, 3000, 3010],\r\n        color: (opacity = 1) => `rgba(218, 255, 71, ${opacity})`,\r\n        strokeWidth: 2, \r\n        },\r\n      \r\n    ],\r\n  };\r\n\r\n  const chartConfig = {\r\n    backgroundGradientFrom: '#1E2923',\r\n    backgroundGradientFromOpacity: 0,\r\n    backgroundGradientTo: '#1E2923',\r\n    backgroundGradientToOpacity: 0.5,\r\n    decimalPlaces:0,\r\n    color: (opacity = 1) => `rgba(26, 255, 146, ${opacity})`,\r\n    strokeWidth: 2, \r\n    barPercentage: 0.5,\r\n  };\r\n  const screenWidth = Dimensions.get('window').width; \r\n  return (\r\n    <View style={{backgroundColor:'#221F3A', marginTop:20, borderRadius:10}}>\r\n      <View style={styles.container}>\r\n        <Text style={styles.box1}>\r\n        Kelapa Bulat\r\n        </Text>\r\n        <Text style={styles.box2}>\r\n            3,150 <Text style={{fontSize:16}}>Rp/Kg</Text>\r\n        </Text>\r\n      </View>\r\n      \r\n      <LineChart\r\n        data={data}\r\n        width={screenWidth}\r\n        height={220}\r\n        chartConfig={chartConfig}\r\n        bezier\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nconst styles=StyleSheet.create({\r\n    container:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-between'\r\n    },\r\n    box1:{\r\n        padding:10,\r\n        color:'white',\r\n        fontSize:20\r\n    },\r\n    box2:{\r\n        padding:10,\r\n        color:'white',\r\n        fontSize:20\r\n    }\r\n})\r\nexport default Chartkelapa;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}